buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url='https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.31"
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.4.31"
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'

apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "create_jetpack.refmap.json"
}

version = '1.0.0'
group = 'possible_triangle.create_jetpack'
archivesBaseName = mod_id

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    // Change to your preferred mappings
    mappings channel: 'snapshot', version: '20200920-mixed-1.16.3'
    // Add your AccessTransformer
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            jvmArgs "-Dmixin.env.disableRefMap=true"

            arg '-mixin.config=create_jetpack.mixins.json'
            property 'forge.logging.console.level', 'debug'

            mods {
                create_jetpack {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            jvmArgs "-Dmixin.env.disableRefMap=true"

            arg '-mixin.config=create_jetpack.mixins.json'
            property 'forge.logging.console.level', 'debug'

            mods {
                create_jetpack {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            jvmArgs "-Dmixin.env.disableRefMap=true"

            property 'forge.logging.console.level', 'debug'

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                create_jetpack {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        name = 'Kotlin for Forge'
        url = 'https://thedarkcolour.github.io/KotlinForForge/'
    }
    maven {
        url = 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name "Progwml6 maven"
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "tterrag maven"
        url = "https://maven.tterrag.com/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${mc_version}-${forge_version}"

    fg.deobf(implementation("thedarkcolour:kotlinforforge:${kotlin_for_forge_version}"))

    compileOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}:api")
    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}:${jei_version}")

    implementation fg.deobf("com.jozufozu.flywheel:Flywheel:${flywheel_version}")
    implementation fg.deobf("curse.maven:create-328085:${create_version}")

    annotationProcessor 'org.spongepowered:mixin:0.8:processor'
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        languageVersion = '1.4'
        apiVersion = '1.4'
    }
}

// Include assets and data from data generators
sourceSets.main.resources {
    srcDirs 'src/generated/resources/'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "create_jetpack",
                "Specification-Vendor"    : "create_jetpacksareus",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${mod_version}",
                "Implementation-Vendor"   : "create_jetpacksareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : "create_jetpack.mixins.json"
        ])
    }
}